"""initial schema

Revision ID: 56e1a9d2ba59
Revises:
Create Date: 2025-10-18 16:36:38.674310

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "56e1a9d2ba59"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "alignment_events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.String(length=64), nullable=False),
        sa.Column("title", sa.String(length=512), nullable=False),
        sa.Column("context", sa.Text(), nullable=True),
        sa.Column("suggestions", sa.JSON(), nullable=False),
        sa.Column("notification_status", sa.String(length=64), nullable=False),
        sa.Column("notification_meta", sa.JSON(), nullable=False),
        sa.Column("followup_status", sa.String(length=64), nullable=True),
        sa.Column("followup_recorded_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_alignment_events_created_at"), "alignment_events", ["created_at"], unique=False)
    op.create_index(op.f("ix_alignment_events_event_id"), "alignment_events", ["event_id"], unique=True)
    op.create_table(
        "feedback",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plan_id", sa.String(length=64), nullable=False),
        sa.Column("user", sa.String(length=255), nullable=True),
        sa.Column("rating", sa.Integer(), nullable=True),
        sa.Column("edited_prd", sa.Text(), nullable=True),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_feedback_created_at"), "feedback", ["created_at"], unique=False)
    op.create_index(op.f("ix_feedback_plan_id"), "feedback", ["plan_id"], unique=False)
    op.create_table(
        "plans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plan_id", sa.String(length=64), nullable=False),
        sa.Column("title", sa.String(length=512), nullable=False),
        sa.Column("context", sa.Text(), nullable=True),
        sa.Column("constraints", sa.JSON(), nullable=False),
        sa.Column("prd_markdown", sa.Text(), nullable=True),
        sa.Column("ticket_plan", sa.JSON(), nullable=True),
        sa.Column("status_digest", sa.Text(), nullable=True),
        sa.Column("critic_review", sa.JSON(), nullable=True),
        sa.Column("revision_history", sa.JSON(), nullable=False),
        sa.Column("trace_name", sa.String(length=255), nullable=True),
        sa.Column("embedding", sa.JSON(), nullable=True),
        sa.Column("tokens_used", sa.Integer(), nullable=True),
        sa.Column("cost_usd", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_plans_created_at"), "plans", ["created_at"], unique=False)
    op.create_index(op.f("ix_plans_plan_id"), "plans", ["plan_id"], unique=True)
    op.create_table(
        "prd_approvals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version_id", sa.String(length=64), nullable=False),
        sa.Column("reviewer", sa.String(length=255), nullable=False),
        sa.Column("reviewer_email", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=64), nullable=False),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prd_approvals_created_at"), "prd_approvals", ["created_at"], unique=False)
    op.create_index(op.f("ix_prd_approvals_version_id"), "prd_approvals", ["version_id"], unique=False)
    op.create_table(
        "prd_versions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version_id", sa.String(length=64), nullable=False),
        sa.Column("plan_id", sa.String(length=64), nullable=False),
        sa.Column("parent_version_id", sa.String(length=64), nullable=True),
        sa.Column("branch", sa.String(length=255), nullable=False),
        sa.Column("prd_markdown", sa.Text(), nullable=False),
        sa.Column("commit_message", sa.String(length=512), nullable=True),
        sa.Column("author", sa.String(length=255), nullable=True),
        sa.Column("author_email", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=64), nullable=False),
        sa.Column("diff_summary", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prd_versions_branch"), "prd_versions", ["branch"], unique=False)
    op.create_index(op.f("ix_prd_versions_created_at"), "prd_versions", ["created_at"], unique=False)
    op.create_index(op.f("ix_prd_versions_parent_version_id"), "prd_versions", ["parent_version_id"], unique=False)
    op.create_index(op.f("ix_prd_versions_plan_id"), "prd_versions", ["plan_id"], unique=False)
    op.create_index(op.f("ix_prd_versions_status"), "prd_versions", ["status"], unique=False)
    op.create_index(op.f("ix_prd_versions_version_id"), "prd_versions", ["version_id"], unique=True)
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "RUNNING", "COMPLETED", "FAILED", "RETRYING", name="taskstatusdb"),
            nullable=False,
        ),
        sa.Column("payload", sa.JSON(), nullable=True),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("max_retries", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tasks_created_at"), "tasks", ["created_at"], unique=False)
    op.create_index(op.f("ix_tasks_status"), "tasks", ["status"], unique=False)
    op.create_index(op.f("ix_tasks_task_id"), "tasks", ["task_id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tasks_task_id"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_status"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_created_at"), table_name="tasks")
    op.drop_table("tasks")
    op.drop_index(op.f("ix_prd_versions_version_id"), table_name="prd_versions")
    op.drop_index(op.f("ix_prd_versions_status"), table_name="prd_versions")
    op.drop_index(op.f("ix_prd_versions_plan_id"), table_name="prd_versions")
    op.drop_index(op.f("ix_prd_versions_parent_version_id"), table_name="prd_versions")
    op.drop_index(op.f("ix_prd_versions_created_at"), table_name="prd_versions")
    op.drop_index(op.f("ix_prd_versions_branch"), table_name="prd_versions")
    op.drop_table("prd_versions")
    op.drop_index(op.f("ix_prd_approvals_version_id"), table_name="prd_approvals")
    op.drop_index(op.f("ix_prd_approvals_created_at"), table_name="prd_approvals")
    op.drop_table("prd_approvals")
    op.drop_index(op.f("ix_plans_plan_id"), table_name="plans")
    op.drop_index(op.f("ix_plans_created_at"), table_name="plans")
    op.drop_table("plans")
    op.drop_index(op.f("ix_feedback_plan_id"), table_name="feedback")
    op.drop_index(op.f("ix_feedback_created_at"), table_name="feedback")
    op.drop_table("feedback")
    op.drop_index(op.f("ix_alignment_events_event_id"), table_name="alignment_events")
    op.drop_index(op.f("ix_alignment_events_created_at"), table_name="alignment_events")
    op.drop_table("alignment_events")
    # ### end Alembic commands ###
