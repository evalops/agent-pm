[project]
name = "agent-pm"
version = "0.1.0"
description = "AI Agent Product Manager service"
requires-python = ">=3.11"
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "httpx",
    "google-auth",
    "requests",
    "pydantic>=2",
    "pydantic-settings>=2",
    "python-dotenv",
    "jinja2",
    "rich",
    "openai>=1.40",
    "pandas>=2",
    "pyyaml>=6",
    "openai-agents>=0.3.3",
    "prometheus-client",
    "sqlalchemy>=2.0",
    "asyncpg",
    "redis[async]>=5.0",
    "rq",
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-httpx",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "ruff",
    "mypy",
]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.uv]
package = true

[tool.setuptools.packages.find]
where = ["."]
include = ["agent_pm*"]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # function call in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
ignore_missing_imports = true
files = ["agent_pm"]
disable_error_code = ["import-untyped", "import-not-found"]
exclude = ["^evals/"]
ignore_errors = true
